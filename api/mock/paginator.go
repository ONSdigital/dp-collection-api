// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/ONSdigital/dp-collection-api/api"
	"net/http"
	"sync"
)

// Ensure, that PaginatorMock does implement api.Paginator.
// If this is not the case, regenerate this file with moq.
var _ api.Paginator = &PaginatorMock{}

// PaginatorMock is a mock implementation of api.Paginator.
//
//     func TestSomethingThatUsesPaginator(t *testing.T) {
//
//         // make and configure a mocked api.Paginator
//         mockedPaginator := &PaginatorMock{
//             ReadPaginationParametersFunc: func(r *http.Request) (int, int, error) {
// 	               panic("mock out the ReadPaginationParameters method")
//             },
//         }
//
//         // use mockedPaginator in code that requires api.Paginator
//         // and then make assertions.
//
//     }
type PaginatorMock struct {
	// ReadPaginationParametersFunc mocks the ReadPaginationParameters method.
	ReadPaginationParametersFunc func(r *http.Request) (int, int, error)

	// calls tracks calls to the methods.
	calls struct {
		// ReadPaginationParameters holds details about calls to the ReadPaginationParameters method.
		ReadPaginationParameters []struct {
			// R is the r argument value.
			R *http.Request
		}
	}
	lockReadPaginationParameters sync.RWMutex
}

// ReadPaginationParameters calls ReadPaginationParametersFunc.
func (mock *PaginatorMock) ReadPaginationParameters(r *http.Request) (int, int, error) {
	if mock.ReadPaginationParametersFunc == nil {
		panic("PaginatorMock.ReadPaginationParametersFunc: method is nil but Paginator.ReadPaginationParameters was just called")
	}
	callInfo := struct {
		R *http.Request
	}{
		R: r,
	}
	mock.lockReadPaginationParameters.Lock()
	mock.calls.ReadPaginationParameters = append(mock.calls.ReadPaginationParameters, callInfo)
	mock.lockReadPaginationParameters.Unlock()
	return mock.ReadPaginationParametersFunc(r)
}

// ReadPaginationParametersCalls gets all the calls that were made to ReadPaginationParameters.
// Check the length with:
//     len(mockedPaginator.ReadPaginationParametersCalls())
func (mock *PaginatorMock) ReadPaginationParametersCalls() []struct {
	R *http.Request
} {
	var calls []struct {
		R *http.Request
	}
	mock.lockReadPaginationParameters.RLock()
	calls = mock.calls.ReadPaginationParameters
	mock.lockReadPaginationParameters.RUnlock()
	return calls
}
