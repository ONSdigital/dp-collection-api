swagger: "2.0"
info:
  title: dp-collection-api
  description: "An API for collection management"
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
schemes:
  - http
tags: collection
parameters:
  collection_id:
    name: collection_id
    in: path
    required: true
    type: string
  limit:
    name: limit
    description: "Maximum number of items that will be returned. A value of zero will return zero items."
    in: query
    required: false
    type: integer
    default: 20
    maximum: 1000
    minimum: 0
  offset:
    name: offset
    description: "Starting index of the items array that will be returned. A value of zero indicates starting from the beginning"
    in: query
    required: false
    type: integer
    default: 0
    minimum: 0
  name:
    name: name
    description: "A substring that matches the names of the items returned"
    in: query
    required: false
    type: string
    maxLength: 80
  order_by:
    name: order_by
    description: "The parameter which determines the order of the items returned"
    in: query
    required: false
    type: string
    enum:
      - date
    default: date
paths:
  /collections:
    get:
      summary: Get a list of collections
      description: Get a list of all collections
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/name'
        - $ref: '#/parameters/order_by'
      produces:
        - application/json
      responses:
        200:
          description: "A JSON list of collections"
          schema:
            type: object
            properties:
              count:
                description: "Number of collections in the response"
                type: integer
              limit:
                description: "Number of collections requested"
                type: integer
                default: 20
                maximum: 1000
                minimum: 0
              offset:
                description: "Number of collections into the list that the response starts at"
                type: integer
                default: 0
                minimum: 0
              total_count:
                description: "Total number of collections"
                type: integer
              items:
                description: "list of collections"
                type: array
                items:
                  $ref: "#/definitions/Collection"
        500:
          $ref: '#/responses/InternalError'
    post:
      summary: "Creates a new collection"
      responses:
        201:
          description: "Successfully added a collection"
        500:
          $ref: '#/responses/InternalError'
  /collections/{collection_id}/events:
    get:
      summary: "Gets an even for a collection"
      parameters:
        - $ref: '#/parameters/collection_id'
      responses:
        201:
          description: "Successfully retrieved an event for a collection"
        500:
          $ref: '#/responses/InternalError'
    post:
      summary: "Creates an event for a collection"
      parameters:
        - $ref: '#/parameters/collection_id'
      responses:
        201:
          description: "Successfully created an event for a collection"
        500:
          $ref: '#/responses/InternalError'

responses:
  InternalError:
    description: "Failed to process the request due to an internal error"

definitions:
  Collection:
    description: "A model for the response body when getting a collection"
    type: object
    required:
      - id
    properties:
      id:
        description: "A unique identifier for the collection"
        type: string
      name:
        description: "The name of the collection"
        type: string
        example: "LMSV1"
      publishing_date:
        description: "Date when the collection was/will be published"
        type: string
        format: date-time
        example: "2020-04-26T08:05:52Z"
        default: "to be determined"
